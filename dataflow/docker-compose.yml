version: '3.6'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    restart: unless-stopped
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    restart: unless-stopped
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      # KAFKA_BROKER_ID: '0'
      # KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      # KAFKA_NUM_PARTITIONS: '12'
      # KAFKA_COMPRESSION_TYPE: 'gzip'
      # KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
      # KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: '1'
      # KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: '1'
      # KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092'
      # KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'
      # KAFKA_JMX_PORT: '9091'
      # KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      # KAFKA_AUTHORIZER_CLASS_NAME: 'kafka.security.authorizer.AclAuthorizer'
      # KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: 'true'
    links:
      - zookeeper
  akhq:
    # build:
    #   context: .
    image: tchiotludo/akhq
    restart: unless-stopped
    # environment:
    #   AKHQ_CONFIGURATION: |
    #     akhq:
    #       connections:
    #         docker-kafka-server:
    #           properties:
    #             bootstrap.servers: "kafka:9092"
    #           schema-registry:
    #             url: "http://schema-registry:8085"
    #           connect:
    #             - name: "connect"
    #               url: "http://connect:8083"
    volumes:
      - ./application.yml:/app/application.yml
    ports:
      - 8080:8080
    links:
      - kafka